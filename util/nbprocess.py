import click
import os
import re
import yaml
from subprocess import call


# setup command line arguments and options
@click.command()
@click.argument('notebook')
@click.option('--nbloc', default='notebooks')
@click.option('--imglist', default=os.path.join('util', 'nbprocess.yml'))
@click.option('--siteloc', default='docs')
@click.option('--moveimg', is_flag=True)
def cli(notebook, nbloc, imglist, siteloc, moveimg):
    # convert notebook to markdown
    call(['jupyter', 'nbconvert', os.path.join(nbloc, notebook + '.ipynb'), '--to',  'markdown'])

    # read list of image names
    f = open(imglist, 'r')
    images = yaml.safe_load(f)[notebook]
    f.close()

    # image directories
    sourcedir = os.path.join(nbloc, notebook + '_files')
    targetdir = os.path.join(siteloc, 'assets', 'images', notebook)

    # create target image directory if it does not exist and moving images
    if moveimg and not os.path.exists(targetdir):
        os.makedirs(targetdir)

    # open files
    sourcefile = open(os.path.join(nbloc, notebook + '.md'), 'r')
    targetfile = open(os.path.join(siteloc, '_pages', notebook + '.md'), 'w')
    index = 0

    # read source file line by line
    for line in sourcefile:
        if '![png]' in line:
            # source/target images
            sourceimg = os.path.join(sourcedir, re.search(notebook + '(_\d+)+.png', line).group())
            targetimg = os.path.join(targetdir, images[index] + '.png')

            # rename or remove image
            os.rename(sourceimg, targetimg) if moveimg else os.remove(sourceimg)

            # replace image path generated by nbconvert
            line = '![png]({}){}'.format(targetimg.replace(siteloc, '{{ site.baseurl }}'), '{: .center-image }')
            index += 1

        # write line to target file
        targetfile.write(line)

    # close files
    sourcefile.close()
    targetfile.close()

    # remove source markdown file and image directory
    os.remove(sourcefile.name)
    os.rmdir(sourcedir)
